{"version":3,"sources":["Graph.jsx","Input.jsx","ErrorBoundary.jsx","Navbar.jsx","App.js","index.js"],"names":["Graph","props","graphToPlot","parameters","target","width","height","data","fn","color","grid","yAxis","domain","xAxis","functionPlot","console","log","Input","useState","graph","setGraph","exp","setExp","re","rep","x","checkmath","test","evaluate","className","type","name","onChange","event","document","querySelector","value","onClick","preventDefault","plot","checktrigno","ErrorBoundary","state","hasError","this","children","error","React","Component","Nav","App","graphplot","funct","ReactDOM","render","getElementById"],"mappings":"qNAsBeA,MAlBf,SAAeC,GACPA,EAAMC,YAAZ,IACQC,EAAa,CACfC,OAAQ,QACRC,MANI,IAOJC,OANK,IAOLC,KAAM,CAAC,CACLC,GAAGP,EAAMC,YACTO,MAAO,QAETC,MAAM,EACNC,MAAO,CAACC,OAAQ,EAAE,EAAG,IACrBC,MAAO,CAACD,OAAQ,EAAE,EAAG,KAIzB,OAFAE,IAAaX,GACbY,QAAQC,IAAI,YACL,M,gBC8BIC,MA7Cf,SAAehB,GACX,MAAuBiB,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoBF,mBAAS,IAA7B,mBAAOG,EAAP,KAAYC,EAAZ,KAKEC,EAAK,8DACLC,EAAI,oBAEJC,EAAE,UAkBJ,SAASC,EAAUL,GACf,GAAGE,EAAGI,KAAKN,GACX,OAAQ,6BAAKO,YAASP,KAI1B,OAAO,uBAAMQ,UAAU,OAAhB,UACP,kDACA,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,SAjC/B,SAAqBC,GACjBb,EAASc,SAASC,cAAc,SAASC,QAgCSA,MAAOjB,IAC7D,uBAAOW,KAAK,SAASM,MAAM,OAAOC,QAzBlC,SAAkBJ,GAEdA,EAAMK,iBACNrC,EAAMsC,KAAKpB,GACXC,EAAS,IACTE,EAAOH,MAqBX,oCA7BM,QA6BKQ,KAAKN,GAlBhB,SAAqBA,GAED,GAAbI,EAAEE,KAAKN,IACQ,GAAfG,EAAIG,KAAKN,IACZK,EAAUL,GAcUmB,CAAYnB,GAAOK,EAAUL,U,kCCrB1CoB,E,kDAlBX,WAAYxC,GAAQ,IAAD,8BACf,cAAMA,IACDyC,MAAQ,CAAEC,UAAU,GAFV,E,0CASnB,WACI,OAAIC,KAAKF,MAAMC,SACR,0EAGAC,KAAK3C,MAAM4C,Y,uCATtB,SAAgCC,GAC5B,MAAO,CAAEH,UAAU,O,GAPCI,IAAMC,WCMnBC,MARf,WACI,OACJ,qBAAKpB,UAAU,gCAAf,SACA,sBAAMA,UAAU,uBAAhB,gCCkBeqB,MAhBf,WACE,MAA0BhC,mBAAS,KAAnC,mBAAMiC,EAAN,KAAgB/B,EAAhB,KAKA,OAAO,gCACP,qBAAKS,UAAU,SAAf,SAAwB,cAAC,EAAD,MACxB,eAAC,EAAD,WACA,qBAAKA,UAAU,UAAf,SAAyB,cAAC,EAAD,CAAOU,KAPhC,SAAmBa,GAChBhC,EAASgC,GACTrC,QAAQC,IAAImC,QAMf,qBAAKtB,UAAU,YAAf,SAA2B,cAAC,EAAD,CAAO3B,YAAaiD,aCTjDE,IAASC,OAAO,cAAC,EAAD,IACdpB,SAASqB,eAAe,W","file":"static/js/main.105363eb.chunk.js","sourcesContent":["import functionPlot from \"function-plot\";\r\n\r\nlet width = 600;\r\nlet height = 400;\r\nfunction Graph(props){\r\n  let a=props.graphToPlot;\r\n    const parameters = {\r\n        target: \"#root\",\r\n        width,\r\n        height,\r\n        data: [{\r\n          fn:props.graphToPlot, \r\n          color: 'red'\r\n        }],\r\n        grid: true,\r\n        yAxis: {domain: [-1, 1]},\r\n        xAxis: {domain: [-4, 4]}\r\n      };\r\n    functionPlot(parameters);\r\n    console.log(\"Function\");\r\n    return null;\r\n}\r\nexport default Graph;","import { evaluate } from \"mathjs\";\r\nimport { useState } from \"react\";\r\nimport Graph from \"./Graph\";\r\n\r\n\r\nfunction Input(props){\r\n    const [graph,setGraph]=useState(\"\");\r\n    const [exp, setExp]=useState(\"\");\r\n    function graphChange(event){\r\n        setGraph(document.querySelector(\"input\").value);\r\n        \r\n    }\r\nconst re = /(?:(?:^|[-+_*/])(?:\\s*-?\\d+(\\.\\d+)?(?:[eE][+-]?\\d+)?\\s*))+$/;\r\nconst rep=/\\b(sin|cos|tan)\\b/;\r\nconst reu=/[a-z]/;\r\nconst x=/\\b(x)\\b/;\r\n\r\n    function transfer(event){\r\n    \r\n        event.preventDefault();\r\n        props.plot(graph);\r\n        setGraph(\"\");\r\n        setExp(graph);\r\n        \r\n    }\r\n    function checktrigno(exp){\r\n        \r\n        if(x.test(exp)==false){\r\n        if(rep.test(exp)==true)\r\n        checkmath(exp);\r\n        }\r\n        \r\n    }\r\n    function checkmath(exp){\r\n        if(re.test(exp))\r\n        return (<h1>{evaluate(exp)}</h1>) ; \r\n    }\r\n\r\n    //<div> {re.test(exp) ?  <h1>{evaluate(exp)}</h1> : null }</div>\r\n    return(<form className=\"form\">\r\n    <label>Enter graph: </label>\r\n    <input type=\"text\" name=\"func\" onChange={graphChange} value={graph}></input>\r\n    <input type=\"submit\" value=\"Plot\" onClick={transfer}></input>\r\n    <div> {reu.test(exp) ?  checktrigno(exp) : checkmath(exp)  }</div>\r\n    \r\n\r\n    </form>);\r\n\r\n}\r\n    \r\nexport default Input;\r\n","import React, { Component } from 'react'\r\n\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true };\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n        return <h1>Something went wrong. Enter Valid Input.</h1>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nfunction Nav(){\r\n    return(\r\n<nav className=\"navbar navbar-light bg-light \">\r\n<span className=\"navbar-brand mb-0 h1\">Math-Calculator</span>\r\n</nav>);\r\n}\r\n\r\n\r\nexport default Nav;","import Graph from \"./Graph.jsx\";\r\nimport Input from \"./Input\";\r\nimport {useState} from \"react\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport Nav from \"./Navbar\"\r\n\r\nfunction App(){\r\n  const[graphplot,setGraph]=useState(\"0\");\r\n  function graphProp(funct) {\r\n     setGraph(funct);\r\n     console.log(graphplot);\r\n  }\r\n  return(<div >\r\n  <div className=\"header\"><Nav /></div>\r\n  <ErrorBoundary>\r\n  <div className=\"sidebar\"><Input plot={graphProp}></Input></div>\r\n  <div className=\"content-1\"><Graph graphToPlot={graphplot}/></div>\r\n  </ErrorBoundary>\r\n  </div>);\r\n}\r\n\r\n\r\nexport default App; \r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\n\r\n  \r\nReactDOM.render(<App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}